name: Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  docs:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install pdoc3
        
    - name: Create dummy environment
      run: |
        echo "# Documentation environment variables" > .env
        echo "DEBUG=False" >> .env
        echo "ENVIRONMENT=docs" >> .env
        
    - name: Check docstrings
      run: python scripts/check_docstrings.py
        
    - name: Generate documentation
      run: |
        mkdir -p docs
        pdoc --html --output-dir docs/ src/
        
    - name: Cleanup sensitive information
      run: |
        find docs/ -type f -name "*.html" -exec sed -i 's/\(password\|secret\|key\|token\)=[^&]*&/\1=REDACTED\&/g' {} +

    - name: Setup Pages
      uses: actions/configure-pages@v3

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: './docs'

    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      id: deployment
      uses: actions/deploy-pages@v4